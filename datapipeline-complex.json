{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": { "description": "Location for all resources." }
    },
    "prefix": {
      "type": "string",
      "defaultValue": "synapse-demo",
      "metadata": { "description": "Prefix for resource names." }
    },
    "storageSku": {
      "type": "string",
      "defaultValue": "Standard_RAGRS",
      "allowedValues": [ "Standard_LRS", "Standard_GRS", "Standard_RAGRS" ],
      "metadata": { "description": "Storage account SKU." }
    },
    "eventHubSku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [ "Basic", "Standard" ]
    },
    "synapseSkuName": {
      "type": "string",
      "defaultValue": "DW100c",
      "metadata": { "description": "Dedicated SQL pool SKU (DW units like DW100c)" }
    },
    "sqlAdminLogin": {
      "type": "string",
      "defaultValue": "sqladminuser"
    },
    "sqlAdminPassword": {
      "type": "secureString"
    },
    "cosmosDbConsistency": {
      "type": "string",
      "defaultValue": "Session"
    }
  },
  "variables": {
    "storageAccountName": "[toLower(concat(parameters('prefix'), 'lake', uniqueString(resourceGroup().id)))]",
    "eventHubNamespace": "[concat(parameters('prefix'), '-ehns')]",
    "eventHubName": "[concat(parameters('prefix'), '-events')]",
    "synapseWorkspaceName": "[concat(parameters('prefix'), '-synw')]",
    "synapseSqlPoolName": "[concat(parameters('prefix'), '-sqlpool')]",
    "synapseSparkPoolName": "spark-pool-1",
    "cosmosAccountName": "[toLower(concat(parameters('prefix'), 'cosmos', uniqueString(resourceGroup().id)))]",
    "keyVaultName": "[concat(parameters('prefix'), '-kv')]",
    "mlWorkspaceName": "[concat(parameters('prefix'), '-mlws')]",
    "cognitiveName": "[concat(parameters('prefix'), '-cog')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": { "name": "[parameters('storageSku')]" },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "isHnsEnabled": true
      }
    },

    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2022-10-01-preview",
      "name": "[variables('eventHubNamespace')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('eventHubSku')]",
        "tier": "[parameters('eventHubSku')]"
      },
      "properties": {
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "2022-10-01-preview",
      "name": "[concat(variables('eventHubNamespace'), '/', variables('eventHubName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespace'))]"
      ],
      "properties": {
        "messageRetentionInDays": 7,
        "partitionCount": 4
      }
    },

    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2022-07-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": { "family": "A", "name": "standard" },
        "accessPolicies": []
      }
    },

    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-10-15",
      "name": "[variables('cosmosAccountName')]",
      "location": "[parameters('location')]",
      "kind": "MongoDB",
      "properties": {
        "consistencyPolicy": {
          "defaultConsistencyLevel": "[parameters('cosmosDbConsistency')]"
        },
        "locations": [
          { "locationName": "[parameters('location')]" }
        ],
        "databaseAccountOfferType": "Standard"
      }
    },

    {
      "type": "Microsoft.MachineLearningServices/workspaces",
      "apiVersion": "2021-07-01",
      "name": "[variables('mlWorkspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "friendlyName": "[variables('mlWorkspaceName')]",
        "description": "ML workspace for model training and MLOps",
        "applicationInsights": null
      }
    },

    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2021-10-01",
      "name": "[variables('cognitiveName')]",
      "location": "[parameters('location')]",
      "sku": { "name": "S1" },
      "kind": "CognitiveServices",
      "properties": {
        "apiProperties": {},
        "customSubDomainName": "[concat(variables('cognitiveName'))]"
      }
    },

    {
      "type": "Microsoft.Synapse/workspaces",
      "apiVersion": "2021-06-01",
      "name": "[variables('synapseWorkspaceName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ],
      "properties": {
        "defaultDataLakeStorage": {
          "accountUrl": "[concat('https://', variables('storageAccountName'), '.dfs.core.windows.net')]",
          "filesystem": "synapse"
        },
        "sqlAdministratorLogin": "[parameters('sqlAdminLogin')]",
        "sqlAdministratorLoginPassword": "[parameters('sqlAdminPassword')]",
        "managedResourceGroupName": "[concat('synapse-mrg-', uniqueString(resourceGroup().id))]"
      }
    },

    {
      "type": "Microsoft.Synapse/workspaces/bigDataPools",
      "apiVersion": "2021-06-01",
      "name": "[concat(variables('synapseWorkspaceName'), '/', variables('synapseSparkPoolName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Synapse/workspaces', variables('synapseWorkspaceName'))]"
      ],
      "properties": {
        "sparkVersion": "2.4",
        "nodeSizeFamily": "MemoryOptimized",
        "nodeSize": "Medium",
        "autoScale": {
          "enabled": true,
          "minNodeCount": 3,
          "maxNodeCount": 10
        },
        "autoPause": {
          "enabled": true,
          "delayInMinutes": 15
        }
      }
    },

    {
      "type": "Microsoft.Synapse/workspaces/sqlPools",
      "apiVersion": "2021-06-01",
      "name": "[concat(variables('synapseWorkspaceName'), '/', variables('synapseSqlPoolName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Synapse/workspaces', variables('synapseWorkspaceName'))]"
      ],
      "sku": {
        "name": "[parameters('synapseSkuName')]",
        "tier": "DataWarehouse"
      },
      "properties": {
        "createMode": "Default"
      }
    }

  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "eventHubEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespace'))).serviceBusEndpoint]"
    },
    "synapseWorkspaceName": {
      "type": "string",
      "value": "[variables('synapseWorkspaceName')]"
    },
    "cosmosDbAccount": {
      "type": "string",
      "value": "[variables('cosmosAccountName')]"
    },
    "mlWorkspace": {
      "type": "string",
      "value": "[variables('mlWorkspaceName')]"
    },
    "cognitiveService": {
      "type": "string",
      "value": "[variables('cognitiveName')]"
    }
  }
}
